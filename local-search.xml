<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[笔记]C++-J1A</title>
    <link href="/1/"/>
    <url>/1/</url>
    
    <content type="html"><![CDATA[<h1 id="笔记-C-J1A"><a href="#笔记-C-J1A" class="headerlink" title="[笔记]C++-J1A"></a>[笔记]C++-J1A</h1><h2 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h2><h4 id="C-的起源"><a href="#C-的起源" class="headerlink" title="C++的起源"></a>C++的起源</h4><p>1982年,美国贝尔实验室的<strong>本贾尼·斯特劳斯特卢普博士</strong>在<strong>C语言的基础</strong>上发明了C++.</p><h4 id="C-的应用"><a href="#C-的应用" class="headerlink" title="C++的应用"></a>C++的应用</h4><p>C++在<strong>各行业领域应用</strong>颇多:操作系统开发、数字图像处理、办公软件开发、网络游戏开发……</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>人与计算机之间依靠<strong>编程语言</strong>进行”沟通”.</p><p>a、”a”与’a’都<strong>不相同</strong>,”a” &#x3D; ‘a’ + ‘\0’,而a则只可以作为<strong>变量名</strong>.</p><p>‘\0’是一个<strong>字符</strong>,表示字符串的<strong>结束符</strong>.</p><p>如果不主动换行，cout输出的内容默认不换行.</p><h2 id="基础框架"><a href="#基础框架" class="headerlink" title="基础框架"></a>基础框架</h2><p>在C++中,代码需要包含基础框架,否则编译时会报错,由此可见框架是C++的基础.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//C++基础框架:</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span><span class="hljs-comment">//引入头文件.</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;头文件&gt;</span><span class="hljs-comment">//可以写多行以导入多个头文件.</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-comment">//使用标准命名空间.</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><span class="hljs-comment">//主函数起点(入口).</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//在此处写代码内容.</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//主函数终点(出口).</span><br>&#125;<span class="hljs-comment">//主函数的范围在&#123;&#125;之间.</span><br></code></pre></td></tr></table></figure><blockquote><p>[!CAUTION]</p><p>一个程序<strong>有且仅有一个主函数</strong>.</p></blockquote><h2 id="词汇总结与用法"><a href="#词汇总结与用法" class="headerlink" title="词汇总结与用法"></a>词汇总结与用法</h2><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><table><thead><tr><th align="center">单词</th><th align="center">含义</th><th align="center">音标</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">include</td><td align="center">包含,包括</td><td align="center">&#x2F;ɪnˈkluːd&#x2F;</td><td align="center"></td></tr><tr><td align="center">input</td><td align="center">输出</td><td align="center">&#x2F;ˈɪn.pʊt&#x2F;</td><td align="center"></td></tr><tr><td align="center">output</td><td align="center">输入</td><td align="center">&#x2F;ˈaʊt.pʊt&#x2F;</td><td align="center"></td></tr><tr><td align="center">io</td><td align="center">输入,输出</td><td align="center">&#x2F;ˈaɪ ˈəʊ&#x2F;</td><td align="center">input与output的缩写</td></tr><tr><td align="center">stream</td><td align="center">河流(数据流)</td><td align="center">&#x2F;striːm&#x2F;</td><td align="center"></td></tr><tr><td align="center">using</td><td align="center">使用</td><td align="center">&#x2F;ˈjuː.zɪŋ&#x2F;</td><td align="center"></td></tr><tr><td align="center">space</td><td align="center">空间</td><td align="center">&#x2F;speɪs&#x2F;</td><td align="center"></td></tr><tr><td align="center">std</td><td align="center">标准的</td><td align="center">&#x2F;stɪd&#x2F;</td><td align="center">standard(&#x2F;ˈstændəd&#x2F;)的缩写</td></tr><tr><td align="center">int</td><td align="center">整数</td><td align="center">&#x2F;ɪnt&#x2F;</td><td align="center">integer(&#x2F;ˈɪntɪdʒə(r)&#x2F;)的缩写</td></tr><tr><td align="center">main</td><td align="center">主要的</td><td align="center">&#x2F;meɪn&#x2F;</td><td align="center"></td></tr><tr><td align="center">return</td><td align="center">返回</td><td align="center">&#x2F;rɪˈtɜːn&#x2F;</td><td align="center"></td></tr><tr><td align="center">iostream</td><td align="center">输入输出数据流</td><td align="center">&#x2F;iˈəʊstrɪm&#x2F;</td><td align="center">input与output的缩写和stream的组合</td></tr><tr><td align="center">namespace</td><td align="center">命名空间</td><td align="center">&#x2F;ˈneɪm.spेɪs&#x2F;</td><td align="center"></td></tr><tr><td align="center">cout</td><td align="center">输出</td><td align="center">&#x2F;ˈsiː aʊt&#x2F;</td><td align="center">c(C语言)与out(出去)的组合</td></tr><tr><td align="center">endl</td><td align="center">换行符</td><td align="center">&#x2F;ˈɛndəl&#x2F;</td><td align="center">end与line的缩写，用于换行，使用cout输出</td></tr></tbody></table><p><em>注:音标皆为英式音标.</em></p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><h5 id="cout-输出"><a href="#cout-输出" class="headerlink" title="cout(输出)"></a>cout(输出)</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//cout的用法</span><br>cout &lt;&lt; <span class="hljs-string">&quot;字符串&quot;</span>;<br>cout &lt;&lt; <span class="hljs-string">&#x27;字符&#x27;</span>;<br>cout &lt;&lt; 数字、数学运算或变量  &lt;&lt; endl;<br><span class="hljs-comment">//&quot;cout&quot;为对象名(输出),&quot;&lt;&lt;&quot;为连接符,&quot;;&quot;为结束符号,双引号内原样输出(包括空格),输出endl表示换行,可以多项输出,也可以输出算术表达式的结果.</span><br><span class="hljs-comment">//cout用法事例</span><br>代码:cout &lt;&lt; <span class="hljs-string">&quot;hello&quot;</span> &lt;&lt;<span class="hljs-string">&quot;   &quot;</span> &lt;&lt; <span class="hljs-number">1</span><span class="hljs-number">+1</span> &lt;&lt; endl &lt;&lt; <span class="hljs-string">&#x27;a&#x27;</span><br>结果:hello   <span class="hljs-number">2</span><br>    a<br><br>    <br></code></pre></td></tr></table></figure><blockquote><p>[!CAUTION]</p><p>C++编程中一切使用<strong>英文</strong>符号.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
