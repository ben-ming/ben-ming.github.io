<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[笔记]C++-J1A</title>
    <link href="/1/"/>
    <url>/1/</url>
    
    <content type="html"><![CDATA[<h1 id="笔记-C-J1A"><a href="#笔记-C-J1A" class="headerlink" title="[笔记]C++-J1A"></a>[笔记]C++-J1A</h1><h2 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h2><h4 id="C-的起源"><a href="#C-的起源" class="headerlink" title="C++的起源"></a>C++的起源</h4><p>1982年,美国贝尔实验室的<strong>本贾尼·斯特劳斯特卢普博士</strong>在<strong>C语言的基础</strong>上发明了C++.</p><h4 id="C-的应用"><a href="#C-的应用" class="headerlink" title="C++的应用"></a>C++的应用</h4><p>C++在<strong>各行业领域应用</strong>颇多:操作系统开发、数字图像处理、办公软件开发、网络游戏开发……</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><p>人与计算机之间依靠<strong>编程语言</strong>进行”沟通”.</p></li><li><p>a、”a”与’a’都<strong>不相同</strong>,”a” &#x3D; ‘a’ + ‘\0’,而a则只可以作为<strong>变量名</strong>.</p></li><li><p>‘\0’是一个<strong>字符</strong>,表示字符串的<strong>结束符</strong>.</p></li><li><p>字符用’’包围,字符串用””包围.</p></li></ul><h2 id="基础框架"><a href="#基础框架" class="headerlink" title="基础框架"></a>基础框架</h2><p>在C++中,代码需要包含基础框架,否则编译时会报错,由此可见框架是C++的基础.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//C++基础框架:</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span><span class="hljs-comment">//引入头文件.</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;头文件&gt;</span><span class="hljs-comment">//可以写多行以导入多个头文件.</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-comment">//使用标准命名空间.</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><span class="hljs-comment">//主函数起点(入口).</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//在此处写代码内容.</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//主函数终点(出口).</span><br>&#125;<span class="hljs-comment">//主函数的范围在&#123;&#125;之间.</span><br></code></pre></td></tr></table></figure><blockquote><p>[!IMPORTANT]</p><p>一个程序<strong>有且仅有一个主函数</strong>.</p></blockquote><h2 id="数据的基本类型"><a href="#数据的基本类型" class="headerlink" title="数据的基本类型"></a>数据的基本类型</h2><table><thead><tr><th align="center">类型名</th><th align="center">字节长度</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">int(整型)</td><td align="center">4(32位)</td><td align="center">-21,4748,3648(-2³¹)~21,4748,3647(2³¹-1)</td></tr><tr><td align="center">long long(长整型)</td><td align="center">8(64位)</td><td align="center"><font size="1">-922,3372,0368,5477,5808(2⁶³)~922,3372,0368,5477,5807(2⁶³-1)</font></td></tr><tr><td align="center">float(单精度)</td><td align="center">4(32位)</td><td align="center">-3.4E38(-3.4×10³⁸)~3.4E38(3.4×10³⁸)(有效位数7)</td></tr><tr><td align="center">double(双精度)</td><td align="center">8(64位)</td><td align="center"><font size="2">-1.7E308(1.7×10³⁰⁸)~1.7E308(1.7×10³⁰⁸)(有效位数15)</font></td></tr><tr><td align="center">char(字符型)</td><td align="center">1(8位)</td><td align="center">-128(-2⁷)~127(2⁷-1)</td></tr><tr><td align="center">bool(布尔型)</td><td align="center">1(8位)</td><td align="center">0或1</td></tr></tbody></table><blockquote><p>[!IMPORTANT]</p><p>1.所有类型单字节长度为<strong>8</strong>bits,所有非布尔类型开头有<strong>0或1表示正数或负数</strong>.</p><p>2.所有非布尔类型之所以负数比正数多一个，是因为正数0表示为0000000……而负数零表示为1000000……所以规定<strong>0000000……是真正的零</strong>，而<strong>10000000……则保存在负数中</strong>.</p><p>3.E(e)被称为<strong>科学计数法</strong>,aEb&#x3D;a×10ᵇ.</p><p>4.有效位数表示<strong>有效(准确)数字的个数</strong>,从最左边第一个不为0的所有的数字读起,有效数字<strong>越多越准确</strong>.</p></blockquote><h2 id="ASCII码表"><a href="#ASCII码表" class="headerlink" title="ASCII码表"></a>ASCII码表</h2><p>ASCII码表为<strong>美国信息交换标准代码表</strong>,序号32~126为可见字符.</p><table><thead><tr><th>序号</th><th>字符</th></tr></thead><tbody><tr><td>32</td><td>空格</td></tr><tr><td>33</td><td>!</td></tr><tr><td>34</td><td>“</td></tr><tr><td>35</td><td>#</td></tr><tr><td>36</td><td>$</td></tr><tr><td>37</td><td>%</td></tr><tr><td>38</td><td>&amp;</td></tr><tr><td>39</td><td>‘</td></tr><tr><td>40</td><td>(</td></tr><tr><td>41</td><td>)</td></tr><tr><td>42</td><td>*</td></tr><tr><td>43</td><td>+</td></tr><tr><td>44</td><td>,</td></tr><tr><td>45</td><td>-</td></tr><tr><td>46</td><td>.</td></tr><tr><td>47</td><td>&#x2F;</td></tr><tr><td>48</td><td>0</td></tr><tr><td>49</td><td>1</td></tr><tr><td>50</td><td>2</td></tr><tr><td>51</td><td>3</td></tr><tr><td>52</td><td>4</td></tr><tr><td>53</td><td>5</td></tr><tr><td>54</td><td>6</td></tr><tr><td>55</td><td>7</td></tr><tr><td>56</td><td>8</td></tr><tr><td>57</td><td>9</td></tr><tr><td>58</td><td>:</td></tr><tr><td>59</td><td>;</td></tr><tr><td>60</td><td>&lt;</td></tr><tr><td>61</td><td>&#x3D;</td></tr><tr><td>62</td><td>&gt;</td></tr><tr><td>63</td><td>?</td></tr><tr><td>64</td><td>@</td></tr><tr><td>65</td><td>A</td></tr><tr><td>66</td><td>B</td></tr><tr><td>67</td><td>C</td></tr><tr><td>68</td><td>D</td></tr><tr><td>69</td><td>E</td></tr><tr><td>70</td><td>F</td></tr><tr><td>71</td><td>G</td></tr><tr><td>72</td><td>H</td></tr><tr><td>73</td><td>I</td></tr><tr><td>74</td><td>J</td></tr><tr><td>75</td><td>K</td></tr><tr><td>76</td><td>L</td></tr><tr><td>77</td><td>M</td></tr><tr><td>78</td><td>N</td></tr><tr><td>79</td><td>O</td></tr><tr><td>80</td><td>P</td></tr><tr><td>81</td><td>Q</td></tr><tr><td>82</td><td>R</td></tr><tr><td>83</td><td>S</td></tr><tr><td>84</td><td>T</td></tr><tr><td>85</td><td>U</td></tr><tr><td>86</td><td>V</td></tr><tr><td>87</td><td>W</td></tr><tr><td>88</td><td>X</td></tr><tr><td>89</td><td>Y</td></tr><tr><td>90</td><td>Z</td></tr><tr><td>91</td><td>[</td></tr><tr><td>92</td><td>\</td></tr><tr><td>93</td><td>]</td></tr><tr><td>94</td><td>^</td></tr><tr><td>95</td><td>_</td></tr><tr><td>96</td><td>&#96;</td></tr><tr><td>97</td><td>a</td></tr><tr><td>98</td><td>b</td></tr><tr><td>99</td><td>c</td></tr><tr><td>100</td><td>d</td></tr><tr><td>101</td><td>e</td></tr><tr><td>102</td><td>f</td></tr><tr><td>103</td><td>g</td></tr><tr><td>104</td><td>h</td></tr><tr><td>105</td><td>i</td></tr><tr><td>106</td><td>j</td></tr><tr><td>107</td><td>k</td></tr><tr><td>108</td><td>l</td></tr><tr><td>109</td><td>m</td></tr><tr><td>110</td><td>n</td></tr><tr><td>111</td><td>o</td></tr><tr><td>112</td><td>p</td></tr><tr><td>113</td><td>q</td></tr><tr><td>114</td><td>r</td></tr><tr><td>115</td><td>s</td></tr><tr><td>116</td><td>t</td></tr><tr><td>117</td><td>u</td></tr><tr><td>118</td><td>v</td></tr><tr><td>119</td><td>w</td></tr><tr><td>120</td><td>x</td></tr><tr><td>121</td><td>y</td></tr><tr><td>122</td><td>z</td></tr><tr><td>123</td><td>{</td></tr><tr><td>124</td><td>|</td></tr><tr><td>125</td><td>}</td></tr><tr><td>126</td><td>~</td></tr><tr><td>127</td><td>deL</td></tr></tbody></table><blockquote><p>[!NOTE]</p><p>1.表格中使用的为<strong>十进制</strong>的ASCII码表.</p></blockquote><blockquote><p>[!IMPORTANT]</p><p>1.记住48是’0’,65是’A’,97是’a’,其他符号以此类推.</p><p>2.在C++中,1为真(true),0为假(false).</p></blockquote><h2 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h2><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>内容不会变的叫<strong>常量</strong>.</p><blockquote><p>[!CAUTION]</p><p>1.常量就是非变量的量</p></blockquote><h4 id="声明常量的方法"><a href="#声明常量的方法" class="headerlink" title="声明常量的方法"></a>声明常量的方法</h4><p>可以使用<a href="#const">const</a>来创建常量.</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>内容会变化的叫<strong>变量</strong>.</p><h4 id="声明变量的方法"><a href="#声明变量的方法" class="headerlink" title="声明变量的方法"></a>声明变量的方法</h4><p>我们可以通过一些<a href="#bianliang">方法</a>声明一个或多个变量.</p><h4 id="C-中的标识符命名规则"><a href="#C-中的标识符命名规则" class="headerlink" title="C++中的标识符命名规则"></a>C++中的标识符命名规则<a id="biaoshifuguize"></a></h4><ul><li>标识符不能和系统里的<strong>关键字</strong>同名.</li><li>标识符只能包含<strong>字母,数字和下划线</strong>,并且开头只能是<strong>字母或下划线</strong>.</li><li>标识符必须<strong>先定义后使用</strong>.</li><li>在同一作用域内,标识符<strong>不能重新定义</strong>.</li><li>标识符是<strong>区分大小写</strong>的.</li><li>标识符要尽量做到”<strong>见名知义</strong>“来增加<strong>程序可读性</strong>.</li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><table><thead><tr><th align="center"></th><th align="center">加法</th><th align="center">减法</th><th align="center">乘法</th><th align="center">除法</th><th align="center">取余</th></tr></thead><tbody><tr><td align="center">数学中</td><td align="center">+</td><td align="center">-</td><td align="center">×</td><td align="center">÷</td><td align="center">mod</td></tr><tr><td align="center">C++中</td><td align="center">+</td><td align="center">-</td><td align="center">*</td><td align="center">&#x2F;</td><td align="center">%</td></tr><tr><td align="center">优先级</td><td align="center">最低</td><td align="center">最低</td><td align="center">最高</td><td align="center">最高</td><td align="center">最高</td></tr></tbody></table><blockquote><p>[!IMPORTANT]</p><p>1.取得<strong>整除法余数</strong>的操作,简称<strong>取余</strong>.</p><p>2.在C++中的取余运算符号为”%”.</p><p>3.a%b或a&#x2F;b,b≠0.</p><p>4.不能有<strong>小数</strong>参与取余运算.</p><p>5.除法中,<strong>任意一方</strong>为小数，运算结果为<strong>小数</strong>(为0不显示,但仍为<strong>小数</strong>);当<strong>两方都为整数</strong>时，运算结果为<strong>整数</strong>(<strong>不会四舍五入</strong>,直接<strong>截去小数部分</strong>).</p><p>6.C++中算数运算符<strong>适用</strong>于数学中的四则运算规则.</p></blockquote><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>“&#x3D;”为<strong>赋值符号</strong>.</p><p><a href="#fuzhi">赋值方法</a></p><h2 id="词汇总结与用法"><a href="#词汇总结与用法" class="headerlink" title="词汇总结与用法"></a>词汇总结与用法</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><table><thead><tr><th align="center">单词</th><th align="center">含义</th><th align="center">音标</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">include</td><td align="center">包含,包括</td><td align="center">&#x2F;ɪnˈkluːd&#x2F;</td><td align="center"></td></tr><tr><td align="center">input</td><td align="center">输出</td><td align="center">&#x2F;ˈɪn.pʊt&#x2F;</td><td align="center"></td></tr><tr><td align="center">output</td><td align="center">输入</td><td align="center">&#x2F;ˈaʊt.pʊt&#x2F;</td><td align="center"></td></tr><tr><td align="center">io</td><td align="center">输入,输出</td><td align="center">&#x2F;ˈaɪ ˈəʊ&#x2F;</td><td align="center">input与output的缩写</td></tr><tr><td align="center">stream</td><td align="center">河流(数据流)</td><td align="center">&#x2F;striːm&#x2F;</td><td align="center"></td></tr><tr><td align="center">using</td><td align="center">使用</td><td align="center">&#x2F;ˈjuː.zɪŋ&#x2F;</td><td align="center"></td></tr><tr><td align="center">space</td><td align="center">空间</td><td align="center">&#x2F;speɪs&#x2F;</td><td align="center"></td></tr><tr><td align="center">std</td><td align="center">标准的</td><td align="center">&#x2F;stɪd&#x2F;</td><td align="center">standard(&#x2F;ˈstændəd&#x2F;)的缩写</td></tr><tr><td align="center">int</td><td align="center">整数</td><td align="center">&#x2F;ɪnt&#x2F;</td><td align="center">integer(&#x2F;ˈɪntɪdʒə(r)&#x2F;)的缩写</td></tr><tr><td align="center">main</td><td align="center">主要的</td><td align="center">&#x2F;meɪn&#x2F;</td><td align="center"></td></tr><tr><td align="center">return</td><td align="center">返回</td><td align="center">&#x2F;rɪˈtɜːn&#x2F;</td><td align="center"></td></tr><tr><td align="center">iostream</td><td align="center">输入输出数据流</td><td align="center">&#x2F;iˈəʊstrɪm&#x2F;</td><td align="center">input与output的缩写和stream的组合</td></tr><tr><td align="center">namespace</td><td align="center">命名空间</td><td align="center">&#x2F;ˈneɪm.spेɪs&#x2F;</td><td align="center"></td></tr><tr><td align="center">cout</td><td align="center">输出</td><td align="center">&#x2F;ˈsiː aʊt&#x2F;</td><td align="center">c(C语言)与out(出去)的组合</td></tr><tr><td align="center">endl</td><td align="center">换行符</td><td align="center">&#x2F;ˈɛndəl&#x2F;</td><td align="center">end与line的缩写，用于换行，使用cout输出</td></tr><tr><td align="center">bits</td><td align="center">字节</td><td align="center">&#x2F;bɪts&#x2F;</td><td align="center"></td></tr><tr><td align="center">const</td><td align="center">关键字</td><td align="center">&#x2F;kɒnst&#x2F;</td><td align="center">可以用于声明常量</td></tr></tbody></table><blockquote><p>[!NOTE]</p><p>1.音标皆为英式音标.</p></blockquote><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><h4 id="cout-输出"><a href="#cout-输出" class="headerlink" title="cout(输出)"></a>cout(输出)</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//cout的用法</span><br>    cout&lt;&lt;<span class="hljs-string">&quot;字符串&quot;</span>;<br>    cout&lt;&lt;<span class="hljs-string">&#x27;字符&#x27;</span>;<br>    cout&lt;&lt;数字、数学运算或变量&lt;&lt;endl;<br>    <span class="hljs-comment">//&quot;cout&quot;为对象名(输出),&quot;&lt;&lt;&quot;为连接符,&quot;;&quot;为结束符号,双引号内原样输出(包括空格),输出endl表示换行,可以多项输出,也可以输出算术表达式的结果.</span><br>    <span class="hljs-comment">//cout用法事例</span><br>        <span class="hljs-comment">//代码:</span><br>            cout&lt;&lt;<span class="hljs-string">&quot;hello&quot;</span>&lt;&lt;<span class="hljs-string">&quot;   &quot;</span>&lt;&lt;<span class="hljs-number">1</span><span class="hljs-number">+1</span>&lt;&lt;endl&lt;&lt;<span class="hljs-string">&#x27;a&#x27;</span>;<br>        <span class="hljs-comment">//结果/效果:</span><br>            hello   <span class="hljs-number">2</span><br>            a<br></code></pre></td></tr></table></figure><h4 id="const-关键字"><a href="#const-关键字" class="headerlink" title="const(关键字)"></a>const(关键字)<a id="const"></a></h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//const的用法</span><br>    <span class="hljs-type">const</span> 类型名 常量名=内容;<br>    <span class="hljs-comment">//&quot;const&quot;为对象名(关键字),&quot;;&quot;为结束符号.</span><br>    <span class="hljs-comment">//const用法事例</span><br><span class="hljs-comment">//代码:</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> a=<span class="hljs-number">1</span>;<br>        <span class="hljs-comment">//结果/效果:</span><br>声明了一个名为a,类型为<span class="hljs-built_in">int</span>(整型),内容为<span class="hljs-string">&#x27;1&#x27;</span>的常量.<br></code></pre></td></tr></table></figure><h4 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量<a id="bianliang"></a></h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//声明变量的方法</span><br>    类型名 变量名;<br>    <span class="hljs-comment">//&quot;;&quot;为结束符号,可以在变量名后加逗号和变量名,可以声明多个变量.</span><br>    <span class="hljs-comment">//声明变量事例</span><br><span class="hljs-comment">//代码:</span><br><span class="hljs-type">int</span> a;<br><span class="hljs-type">char</span> b,c;<br>        <span class="hljs-comment">//结果/效果:</span><br>声明了一个名为a,类型为<span class="hljs-built_in">int</span>(整型)的变量,一个名为b,类型为<span class="hljs-built_in">char</span>(字符型)的变量和一个名为c,类型为<span class="hljs-built_in">char</span>(字符型)的变量.<br></code></pre></td></tr></table></figure><h4 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值<a id="fuzhi"></a></h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//赋值的方法</span><br>    变量名=值或表达式的计算结果;<br>    <span class="hljs-comment">//&quot;;&quot;为结束符号,&quot;=&quot;为赋值符号,变量要事先声明.</span><br>    <span class="hljs-comment">//赋值变量事例</span><br><span class="hljs-comment">//代码:</span><br>a=<span class="hljs-number">1</span>;<br>b=<span class="hljs-number">1</span><span class="hljs-number">+1</span>;<br>        <span class="hljs-comment">//结果/效果:</span><br>将<span class="hljs-number">1</span>赋值到变量a.<br>将<span class="hljs-number">1</span><span class="hljs-number">+1</span>的结果赋值到变量b.<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>1.C++编程中一切使用<strong>英文</strong>符号.</p><p>2.如果不主动换行，cout输出的内容默认不换行.</p><p>3.声明变量的规则参考<a href="#biaoshifuguize">标识符命名规则</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
